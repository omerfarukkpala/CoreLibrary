{
  //"IpRateLimitPolicies": {
  //  "IpRules": [
  //    {
  //      "Ip": "::1",
  //      "Rules": [ // Genel kuralları ezer. Daha kapsamlı olan geçerli olur.
  //        {
  //          "Endpoint": "*",
  //          "Period": "30s",
  //          "Limit": 30
  //        }
  //      ]
  //    }
  //  ]
  //},

  "ClientRateLimiting": {
    "QuotaExceededResponse": {
      "Content": "{{ \"mesaj\":\"İstek limiti aşıldı. \", \"Detay\": \"İzin verilen istek sayısı {1}'de {0} istektir. {2} saniye sonra tekrar deneyiniz.\"}}",
      "ContentType": "application/json"
    }, // Bu kod ile mesajı özelleştirdik..

    "EnableEndpointRateLimiting": true, // Belirli bir zaman diliminde istediğimiz uç noktaya yönelik yapılan istekleri sınırlama ve aşırı istekleri engelleme
    "StackBlockedRequests": false, //  Engellenen isteklerin geri dönüşünde isteği bloke eden öğelerin ayrıntılarını isteğe bağlı olarak görüntüleme
    "HttpStatusCode": 429, // Rate Limiti aşma durumunda dönülecek hata kodu
    "ClientIdHeader": "X-ClientId", // Bu değeri postmanda Headersin içine yazınca artık sınır kalktı.
    "ClientWhitelist": [ "client-1" ], // Sınırlama olmayacak client
    "EndPointWhiteList": [ "put:/api/product" ], // End pointi sınırsız yaptık.
    "GeneralRules": [
      {
        "Endpoint": "*:/api/product", // "*" => Tüm EndPointlere. Baştaki yıldız o controllerdaki tüm get pust delete ler istediğimiz kadar hak verir.
        "Period": "20s", // 20 saniyede
        "Limit": 3 // 3 tane
      },
      //{
      //  "Endpoint": "*:/api/product",
      //  "Period": "1h", // 1 saat
      //  "Limit": 100 // 100 tane
      //},
      {
        "Endpoint": "*:/api/product/*", // Parametre alan methodları kısıtlama
        "Period": "30s",
        "Limit": 5
      },
      {
        "Endpoint": "*:/api/categories",
        "Period": "30s",
        "Limit": 5
      },
      {
        "Endpoint": "*:/api/categories",
        "Period": "1d", // 1 gün
        "Limit": 500 // 500 istek
      }
    ]
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "AllowedHosts": "*"
}

//"IpRateLimitPolicies": {
//  "IpRules": [
//    {
//      "Ip": "::1",
//      "Rules": [ // Genel kuralları ezer. Daha kapsamlı olan geçerli olur.
//        {
//          "Endpoint": "*",
//          "Period": "30s",
//          "Limit": 30
//        }
//      ]
//    }
//  ]
//},

//"IpRateLimiting": {
//  "QuotaExceededResponse": {
//    "Content": "{{ \"mesaj\":\"İstek limiti aşıldı. \", \"Detay\": \"İzin verilen istek sayısı {1}'de {0} istektir. {2} saniye sonra tekrar deneyiniz.\"}}",
//    "ContentType": "application/json"
//  }, // Bu kod ile mesajı özelleştirdik..

//  "EnableEndpointRateLimiting": true, // Belirli bir zaman diliminde istediğimiz uç noktaya yönelik yapılan istekleri sınırlama ve aşırı istekleri engelleme
//  "RealIpHeader": "x-real-ip", // Bu ayar, IP sınırlama, günlük kaydı, analiz ve istatistik gibi senaryolarda kullanışlıdır. Gerçek IP adresini belirten başlık, sunucunun doğru şekilde istekleri takip etmesine ve gerçek istemcileri tanımlamasına olanak sağlar. Bu şekilde, sunucu doğru IP adreslerine dayalı sınırlamaları veya izlemeleri uygulayabilir.
//  "StackBlockedRequests": false, //  Engellenen isteklerin geri dönüşünde isteği bloke eden öğelerin ayrıntılarını isteğe bağlı olarak görüntüleme
//  "HttpStatusCode": 429, // Rate Limiti aşma durumunda dönülecek hata kodu
//  "IpWhitelist": [ "127.0.0.1" ], // Sınırlama olmayacak IP adresleri ::1 bana sınır yok demek
//  "EndPointWhiteList": [ "put:/api/product" ], // End pointi sınırsız yaptık.
//  "GeneralRules": [
//    {
//      "Endpoint": "*:/api/product", // "*" => Tüm EndPointlere. Baştaki yıldız o controllerdaki tüm get pust delete ler istediğimiz kadar hak verir.
//      "Period": "20s", // 20 saniyede
//      "Limit": 3 // 3 tane
//    },
//    //{
//    //  "Endpoint": "*:/api/product",
//    //  "Period": "1h", // 1 saat
//    //  "Limit": 100 // 100 tane
//    //},
//    {
//      "Endpoint": "*:/api/product/*", // Parametre alan methodları kısıtlama
//      "Period": "30s",
//      "Limit": 5
//    },
//    {
//      "Endpoint": "*:/api/categories",
//      "Period": "30s",
//      "Limit": 5
//    },
//    {
//      "Endpoint": "*:/api/categories",
//      "Period": "1d", // 1 gün
//      "Limit": 500 // 500 istek
//    }
//  ]
//},
